# 클래스 메소드(static메서드)와 인스턴스 메소드
# Test102

- **풀, 스테이플러** 생각하기
- static 변수(클래스변수)와 static 메소드(클래스메소드)
- **탄생시점, 공유** 
- 스태틱은 형!, 로딩하며 생성

     이름                   static                                 호출 방법	
---------------  ------------------------------  --------------------------------------------
클래스   메소드  메소드 앞에 static이 붙어 있음  객체 생성 or 클래스이름.메소드이름(매개변수)
인스턴스 메소드                                  반드시 객체를 생성해 호출

인스턴스 메소드: 인스턴스 변수와 관련된 작업을 하는, 즉 메소드의 작업을 수행하는 데 
                 인스턴스 변수를 필요로 하는 메소드

클래스   메소드: 인스턴스와 관계없는(인스턴스 변수나 인스턴스 메소드를 사용하지 않는) 메소드
---------------------------------------------------------------------------------------------

 - 클래스의 멤버변수 중 모든 인스턴스에 공통된 값을 유지해야하는 것이 있는지 살펴 보고
   있으면, static을 붙여준다.
 - 작성한 메서드 중에서 인스턴스 변수나 인스턴스 메서드를 사용하지 않는 메서드에 static을 붙일 것을
   고려한다.

1. 클래스를 설계할 때, 멤버변수 중 모든 인스턴스에 공통으로 사용하는 것에 static을 붙인다.
 - 생성된 각 인스턴스는 서로 독립적이기 때문에 각 인스턴스의 변수는 서로 다른 값을 유지한다. 
   그러나 모든 인스턴스에서 같은 값이 유지되어야 하는 변수는 static을 붙여서 클래스변수로 정의해야 한다.

2. 클래스 변수(static 변수)는 인스턴스를 생성하지 않아도 사용할 수 있다.
 - static이 붙은 변수(클래스 변수)는 클래스가 메모리에 올라갈 때 자동적으로 생성되기 때문이다.

3. 클래스 메서드(static 메소드)는 인스턴스 변수를 사용할 수 없다.
 - 인스턴스 변수는 인스턴스가 반드시 존재해야만 사용할 수 있는데, 클래스메소드(static이 붙은 메소드)는
   인스턴스 생성 없이 호출가능하므로 클래스 메소드가 호출되었을 때 인스턴스가 존재하지 않을 수도 있다.
   그래서 클래스 메서드에서 인스턴스변수의 사용을 금지한다. 반면에 인스턴스변수나 인스턴스메소드에서는 
   static이 붙은 멤버들을 사용하는 것이 언제나 가능하다. 인스턴스 변수가 존재한다는 것은 static변수가
   이미 메모리에 존재한다는 것을 의미하기 때문이다.
4. 메소드 내에서 인스턴스 변수를 사용하지 않는다면, static을 붙이는 것을 고려한다.
 - 메소드의 작업내용 중에서 인스턴스변수를 필요로 한다면, static을 붙일 수 없다. 반대로 인스턴스변수를
   필요로 하지 않는다면 static을 붙이자. 메소드 호출시간이 짧아지므로 성능이 향상된다. static을 안 붙인
   메소드(인스턴스메소드)는 실행 시 호출되어야할 메소드를 찾는 과정이 추가적으로 필요하기 때문에 시간이
   더 걸린다. 

** 참고로 random()과 같은 Math클래스의 메소드는 모두 클래스 메소드이다. Math클래스에는 인스턴스변수가
   하나도 없거니와 작업을 수행하는 데 필요한 값들을 모두 매개변수로 받아서 처리하기 때문이다.
