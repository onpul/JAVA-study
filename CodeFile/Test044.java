// 20221011

// ▶실행 흐름의 컨트롤(제어문)

//----------------------------------------------------------------------
// switch 문 실습

// 사용자로부터 1부터 3까지의 정수 중 하나를 입력받아
// 입력받은 정수만큼의 별문자(★)가 출력되는 프로그램을 작성하나.
// 단, 두 가지 방법으로 구현할 수 있도록 한다.

// ① switch문의 일반 모델을 사용한다.
// ② swtich문의 기본 모델을 사용하되,
//   『break』를 딱 한 번만 사용할 수 있도록 구성한다.

// 실행 예)
// 임의의 정수 입력(1~3) : 3
// ★★★
// 계속하려면 아무 키나 . . .

// 실행 예)
// 임의의 정수 입력(1~3) : 1
// ★
// 계속하려면 아무 키나 . . .

// 실행 예)
// 임의의 정수 입력(1~3) : 7
// 입력 오류
// 계속하려면 아무 키나 . . .
//----------------------------------------------------------------------

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class Test044
{
	public static void main(String[] args) throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int n;
				
		System.out.print("임의의 정수 입력(1~3) : ");
		n = Integer.parseInt(br.readLine());
		
		// 1. 일반 모델 
		/*
		switch (n)
		{
		case 1:
			System.out.printf("★\n");	
			break;
		case 2:
			System.out.printf("★★\n");	
			break;
		case 3:
			System.out.printf("★★★\n");	
			break;
		default:
			System.out.printf("입력 오류\n");	
		}
		*/

		// 2. 기본 모델
		switch (n)
		{
		case 3:
			System.out.print("★"); // 3일 때는 1까지 쭉 누적돼서 3개	
		case 2:
			System.out.print("★"); // 2일 때는 2, 1 누적돼서 2개	
		case 1:
			System.out.print("★\n");	// 1일 때는 1개만, 마지막이니까 줄바꿈 적용
			break;
		default:
			System.out.print("입력 오류\n");	
		}
	}
}
//실행 결과
/*
----------------------------------------------------------------------
임의의 정수 입력(1~3) : 1
★
계속하려면 아무 키나 누르십시오 . . .
----------------------------------------------------------------------
임의의 정수 입력(1~3) : 2
★★
계속하려면 아무 키나 누르십시오 . . .
----------------------------------------------------------------------
임의의 정수 입력(1~3) : 3
★★★
계속하려면 아무 키나 누르십시오 . . .
----------------------------------------------------------------------
임의의 정수 입력(1~3) : 4
입력 오류
계속하려면 아무 키나 누르십시오 . . .
----------------------------------------------------------------------
*/