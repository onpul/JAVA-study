// 20220127 목

// ▶ 클래스 고급

// 중첩 클래스

// 무명! 어나니머스! 익명보다 '무명'이 논리적으로 더 적절
// 랜섬웨어 ㅋㅋㅋ -> 어나니머스로부터 시작
//-------------------------------------------------------------------------------------------------
/*
● Annonymous 클래스(익명의 클래스 : 무명 클래스)
	
   - awt나 안드로이드 이벤트 처리에서 일반적으로 사용
   - 상위 클래스 메소드를 하나 정도 재정의할 필요성이 있을 때 사용
   - 클래스의 객체가 필요하면 또 다시 클래스를 생성해야 하는
     번거로움 때문에 익명의 클래스를 생성하여 처리한다.

● 형식 및 구조

   new 상위클래스의 생성자()
   {
       접근제어지시자 자료형 메소드()
	   {
	       ...;
	   }
   };  //-- 세미콜론 check~!!!
*/
//-------------------------------------------------------------------------------------------------
/*
// 선행 지식? 이해?

1.
내 컵은 이름이 있고 기억을 해 ex) 선반 위에 그 곰돌이 컵~
한 번 쓰고 버릴 건 이름을 쓰지 않는다. ex) 은박 접시, 일회용 컵, 종이컵 / 7번째 쓴 종이컵 못 봤어?

2.
상속??

3. 
※ 기존 자바에서 제공하는 클래스...
   내가 만든 클래스...
   다른 사람이 만든 클래스...
   앞으로 만들어지게 될 모든 클래스...
   즉, 세상에 존재하는, 존재할 모든 클래스는
   Object 클래스를 상속 받는다!
   ---> 'extends Object'

   Q. 다중 상속 안 된다며?????
   A. 다중 상속이 아님!!!
      최상위 클래스는 Object{} 클래스 
	  super를 찾으면 그 속해있는 class를 찾아라 그럼 extends 클래스 명이 있다.
      extends 클래스 명이 없으면 --> 무조건 extends Object가 있다. --> 최상위는 Object{} 클래스!!!
	  모든 클래스에서 인스턴스 생성하면 적어도 Object클래스는 매번 메모리에 퍼올려진다!!!
//-------------------------------------------------------------------------------------------------
*정리*
- Objec Class는 모든 클래스의 최상위 클래스
- 클래스를 상속 받지 않은 클래스에는 "extends Object"가 생략되어 있음.
- 모든 클래스는 Object의 메소드를 사용할 수 있음
*/ 
//-------------------------------------------------------------------------------------------------

// import java.lang*;

class Test3 // extends Object
{
	/* 보이지 않지만 있다.
	Object 클래스의 멤버들...
	...

	public String toString()  //--> Object 클래스가 가지고 있는 메소드
	{
	    ...;
	}
	*/

	public Object getString()
	{
		/*
		return new Object();
			   ------------- Object 형
		*/
		/*
		return new Object(){ 특정 메소드 재구성 }; // -> 다시 정의할 거야~
		*/

		return new Object() // 객체를 리턴
		{
			@Override
			public String toString()
			{
				return "익명의 클래스...";
			}
		};      // ← 세미콜론 (미 작성 시 에러 발생)
	}
}

public class Test127 // extends Object
{
	/*
	Object가 갖고 있는 멤버들... (상속 받는다.)
	*/

	public static void main(String[] args)
	{
		Test3 ob1 = new Test3();

		System.out.println(ob1.toString());
		//==-->> Test3@15db9742

		System.out.println(ob1.getString());
		//--==>> 익명의 클래스...
	}
}
//-------------------------------------------------------------------------------------------------
