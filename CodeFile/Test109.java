// 20220124 월

// ▶ 정렬(Sort) 알고리즘

/*
● 정렬
   : 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

● 정렬의 목적
   : 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
     → 보기 좋게 검색하기 위함

● 정렬의 종류
   : 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬, ....
   
- 정렬은 리소스 소모가 심한 작업이다
- 대상이 많을수록!
- ex) 키 비교
*/

// 선택 정렬(Selection Sort)

// 실행 예)
// Source Data : 52 42 12 62 60
// Sorted Data : 12 42 52 60 62
// 계속하려면 . . .
//-------------------------------------------------------------------------------------------------

public class Test109
{
	public static void main(String[] args)
	{
		int[] a = {52, 42, 12, 62, 60};
		/*
		42 52 12 62 60
		== --

		12 52 42 62 60
		==    --

		12 52 42 62 60
		==       --

		12 52 42 62 60
		==          --
		---------------------------- 1회전

		12 42 52 62 60
		   == --

		12 42 52 62 60
		   ==    --

		12 42 52 62 60
		   ==       --
		---------------------------- 2회전
		
		12 42 52 62 60
		      == --

	    12 42 52 62 60
		      ==    --
	    ---------------------------- 3회전

		12 42 52 60 62
		         == --
		---------------------------- 4회전
		*/
//-------------------------------------------------------------------------------------------------
		// 수업 풀이
		
		int i, j;

		System.out.print("Source Data : ");

		/*
		for (i=0; i<a.length; i++)
		{
			System.out.print(a[i] + " ");
		}
		System.out.println();
		*/

		// 향상된 for문(foreach 구문)
		// 다 털어내야 할 때
		for (int n : a) // 오른쪽부터 작성 -> 자료구조 / 왼쪽 -> 꺼냈을 때 어떤 타입인지, 변수의 이름은 상관 없
		{ 
			System.out.print(n + " ");
		}
		System.out.println();
		// a의 첫번째부터 순차적으로 끝까지 접근 -> 5번 돈다.
		// 일반 for문처럼 괄호 생략 가능

		// Selection Sort
		for (i=0; i<a.length-1; i++)           // 웅 ~     → 비교 기준 데이터          (0    1    2    3)
		{                                      //                                        |    |    |    |
			for (j=i+1; j<a.length; j++)       // 쑝쑝쑝!  → 비교 대상 데이터           1234 234  34   4
			{
				// if (a[i] > a[j]) // 내림차순 정렬
				if (a[i] > a[j])    // 오름차순 정렬
				{
					// 자리 바꾸기
					a[i] = a[i]^a[j];
					a[j] = a[j]^a[i];
					a[i] = a[i]^a[j];
				}
			}
		}

		System.out.print("Sorted Data : ");
		/*
		for (i=0; i<a.length; i++)
		{
			System.out.print(a[i] + " ");
		}
		System.out.println();
		*/
				
		// 향상된 for문(foreach 구문)
		for (int n : a) // 오른쪽부터!
		{
			System.out.print(n + " ");
		}
		System.out.println();
//-------------------------------------------------------------------------------------------------
		// 내 풀이

		// 52, 42, 12, 62, 60

		/*
		for (int i=0; i+1<a.length; i++)
		{
			if (a[i] > a[i+1])
			{
				a[i+1]=a[i+1]^a[i];
				a[i]=a[i]^a[i+1];
				a[i+1]=a[i+1]^a[i];
			}
		}
		// 42 12 52 60 62

		for (int i=0; i<a.length; i++)
		{
			if (a[i] > a[i+1])
			{
			}
		}

		// 출력
		for (int i=0; i<a.length; i++)
		{
			System.out.print(a[i] + " ");
		}
		System.out.println();
		*/
	}
}
//-------------------------------------------------------------------------------------------------
// 실행 결과
/*
Source Data : 52 42 12 62 60
Sorted Data : 12 42 52 60 62
계속하려면 아무 키나 누르십시오 . . .
*/